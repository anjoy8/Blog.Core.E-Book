(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{216:function(e,v,_){"use strict";_.r(v);var r=_(6),t=Object(r.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"k-快速上手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#k-快速上手"}},[e._v("#")]),e._v(" K  快速上手")]),e._v(" "),v("p",[e._v("注意")]),e._v(" "),v("p",[e._v("请确保你的 "),v("code",[e._v("Visual Studio 2019")]),e._v(" 版本 >= "),v("code",[e._v("16.8.2")]),e._v("。"),v("br"),e._v("\n并安装 "),v("code",[e._v(".NET 5.0 SDK")])]),e._v(" "),v("h2",{attrs:{id:"下载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[e._v("#")]),e._v(" 下载")]),e._v(" "),v("p",[e._v("Github（国际） 下载 "),v("a",{attrs:{href:"https://github.com/anjoy8/Blog.Core",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/anjoy8/Blog.Core"),v("OutboundLink")],1)]),e._v(" "),v("p",[e._v("Gitee（国内） 下载 "),v("a",{attrs:{href:"https://gitee.com/laozhangIsPhi/Blog.Core",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitee.com/laozhangIsPhi/Blog.Core"),v("OutboundLink")],1)]),e._v(" "),v("h2",{attrs:{id:"编译与运行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编译与运行"}},[e._v("#")]),e._v(" 编译与运行")]),e._v(" "),v("p",[e._v("1、拿到项目后，双击 "),v("code",[e._v("Blog.Core.sln")]),e._v(" 解决方案；"),v("br"),e._v("\n2、首先 "),v("code",[e._v("F6")]),e._v(" 编译，看是否有错误；"),v("br"),e._v("\n3、然后 "),v("code",[e._v("F5")]),e._v(" 运行，调起 "),v("code",[e._v("9291")]),e._v(" 端口，浏览器查看效果；"),v("br"),e._v("\n4、因为系统默认的是 "),v("code",[e._v("sqlite")]),e._v(" 数据库，如果你想换其他数据库，请看下边；"),v("br"),e._v("\n5、注意：本系统是直接自动生成数据库和数据的，不用手动创建数据库；")]),e._v(" "),v("h2",{attrs:{id:"codefirst-与-dbfirst"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#codefirst-与-dbfirst"}},[e._v("#")]),e._v(" CodeFirst 与 DbFirst")]),e._v(" "),v("p",[e._v("1、项目同时支持两个常见开发模式："),v("code",[e._v("CodeFirst")]),e._v(" 和 "),v("code",[e._v("DbFirst")]),e._v("；"),v("br"),e._v("\n2、首先 如果你是第一次下载我的项目，肯定是想要浏览效果和直接使用对应的权限相关的内容，这个时候肯定需要用到数据库表结构，那就肯定需要 "),v("code",[e._v("CodeFirst")]),e._v(" ，只需要在"),v("code",[e._v("appsettings.json")]),e._v(" 里配置好数据库连接字符串（下文会说到如何配置），就能正确运行；"),v("br"),e._v("\n3、浏览器查看效果，或者配合 "),v("code",[e._v("Admin")]),e._v(" 项目查看效果后，如果感觉项目可行，并打算在此基础上二次开发，那肯定会在你刚刚创建的数据库种去创建新的表结构，这个时候就需要使用 "),v("code",[e._v("DbFirst")]),e._v(" 模式，来生成四层项目问题：Model+Service+Repository等；"),v("br"),e._v("\n4、你可以使用T4模板，但是我更建议使用 "),v("code",[e._v("/api/DbFirst/GetFrameFiles")]),e._v(" 接口来生成，不仅支持多种类型的数据库，还支持同时多库模式的输出；"),v("br"),e._v("\n5、如果你不想用我的表结构和实体类，在项目启动的时候，把配置文件的 "),v("code",[e._v("SeedDBEnabled")]),e._v("节点设置成False即可，然后配置对应的你自己的数据库连接字符串，比如是商城的，然后使用 "),v("code",[e._v("/api/DbFirst/GetFrameFiles")]),e._v(" 接口来生成你的数据库四层类文件；")]),e._v(" "),v("h2",{attrs:{id:"如何配置数据库连接字符串"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何配置数据库连接字符串"}},[e._v("#")]),e._v(" 如何配置数据库连接字符串")]),e._v(" "),v("p",[e._v("1、打开 "),v("code",[e._v("Blog.Core")]),e._v(" 项目下的 "),v("code",[e._v("appsettings.json")]),e._v(" 文件；"),v("br"),e._v("\n2、修改 "),v("code",[e._v("DBS")]),e._v(" 字节内容，配置对应的连接字符串，注意"),v("code",[e._v("DBType")]),e._v("对应不同的数据库类型；"),v("br"),e._v("\n3、把你想要运行的数据库 "),v("code",[e._v("Enabled")]),e._v(" 为 "),v("code",[e._v("true")]),e._v(" 即可，其他都要设置 "),v("code",[e._v("false")]),e._v("；"),v("br"),e._v("\n4、然后 "),v("code",[e._v("MainDB")]),e._v(" 设置为下边你使用的指定 "),v("code",[e._v("ConnId")]),e._v(":")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('  "MainDB": "WMBLOG_MSSQL", //当前项目的主库，所对应的连接字符串的Enabled必须为true\n  "MutiDBEnabled": false, //是否开启多库\n  "DBS": [\n    {\n      "ConnId": "WMBLOG_SQLITE",\n      "DBType": 2,// sqlite数据库\n      "Enabled": true,// 设置为true，启用1\n      "Connection": "WMBlog.db" //只写数据库名就行\n    },\n    {\n      "ConnId": "WMBLOG_MSSQL",\n      "DBType": 1,// sqlserver数据库\n      "Enabled": true,// 设置为true，启用2\n      "Connection": "Server=.;Database=WMBlogDB;User ID=sa;Password=123;",\n      "ProviderName": "System.Data.SqlClient"\n    },\n    {\n      "ConnId": "WMBLOG_MYSQL",\n      "DBType": 0,// mysql\n      "Enabled": false,// false 不启用\n      "Connection": "Server=localhost; Port=3306;Stmt=; Database=wmblogdb; Uid=root; Pwd=456;"\n    },\n    {\n      "ConnId": "WMBLOG_ORACLE",\n      "DBType": 3,// Oracle \n      "Enabled": false,// 不启用\n      "Connection": "Provider=OraOLEDB.Oracle; Data Source=WMBlogDB; User Id=sss; Password=789;"\n    }\n  ],\n')])])]),v("p",[e._v("5、如果你想多库操作，需要配置")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("  a：MainDB 设置为主库的 ConnId；\n  b：MutiDBEnabled设置为true，\n  c：把下边想要连接的多个连接字符串都设置为true\n")])])]),v("h2",{attrs:{id:"如何配置项目端口号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何配置项目端口号"}},[e._v("#")]),e._v(" 如何配置项目端口号")]),e._v(" "),v("p",[e._v("1、在 "),v("code",[e._v("Blog.Core")]),e._v(" 层下的 "),v("code",[e._v("program.cs")]),e._v(" 文件中，将 "),v("code",[e._v("9291")]),e._v("端口，修改为自己想要的端口号；"),v("br"),e._v("\n2、或者在 "),v("code",[e._v("launchSettings.json")]),e._v(" 中设置("),v("code",[e._v("注意，如果仅仅修改这里，publish后，端口访问无效")]),e._v(")；")]),e._v(" "),v("h2",{attrs:{id:"如何项目重命名"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何项目重命名"}},[e._v("#")]),e._v(" 如何项目重命名")]),e._v(" "),v("p",[e._v("1、双击项目根目录下的 "),v("code",[e._v("CreateYourProject.bat")]),e._v(" 批处理文件；"),v("br"),e._v("\n2、根据提示，"),v("code",[e._v("在Dos窗口内")]),e._v("输入自己想要的项目名称即可；"),v("br"),e._v("\n3、在根目录会有一个 "),v("code",[e._v(".1YourProject")]),e._v(" 文件夹，里边即你的项目；")]),e._v(" "),v("h2",{attrs:{id:"新增实体模块后如何迁移到数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新增实体模块后如何迁移到数据库"}},[e._v("#")]),e._v(" 新增实体模块后如何迁移到数据库")]),e._v(" "),v("p",[e._v("1、在 "),v("code",[e._v("Blog.Core.Model")]),e._v(" 项目目录下的 "),v("code",[e._v("Seed")]),e._v(" 文件夹下，找到 "),v("code",[e._v("DBSeed")]),e._v(" 类；"),v("br"),e._v("\n2、根据提示，找到生成table的地方 "),v("code",[e._v("myContext.CreateTableByEntity")]),e._v("；"),v("br"),e._v("\n3、添加进去你新增的实体类，当然也可以用下边的单独写法；"),v("br"),e._v("\n4、编译项目，没错后，运行,则数据库更新完毕；")]),e._v(" "),v("h2",{attrs:{id:"新增实体-如何进行增删改查curd操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新增实体-如何进行增删改查curd操作"}},[e._v("#")]),e._v(" 新增实体，如何进行增删改查CURD操作")]),e._v(" "),v("p",[e._v("1、随便找一个含有业务逻辑的 "),v("code",[e._v("controller")]),e._v(" 参考一下即可；"),v("br"),e._v("\n2、主要 "),v("code",[e._v("api")]),e._v(" 是通过 "),v("code",[e._v("Service")]),e._v(" 服务层提供业务逻辑；"),v("br"),e._v("\n3、然后服务层通过 "),v("code",[e._v("Repository")]),e._v(" 仓储层封装持久化操作；"),v("br"),e._v("\n4、每一个表基本上对应一个仓储类，基本的操作都封装到了 "),v("code",[e._v("BaseRepository.cs")]),e._v(" 基类仓储中；"),v("br"),e._v("\n5、添加完业务逻辑，记得要 "),v("code",[e._v("F6")]),e._v(" 重新编译一下，因为项目间引用解耦了；"),v("br"),e._v("\n6、项目已经自动注入了，直接在控制器使用对应的服务层接口就行： "),v("code",[e._v("IxxxxService")]),e._v(" ;")]),e._v(" "),v("h2",{attrs:{id:"新增数据库表-如何反向生成四层文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新增数据库表-如何反向生成四层文件"}},[e._v("#")]),e._v(" 新增数据库表，如何反向生成四层文件")]),e._v(" "),v("p",[e._v("1、可以通过 "),v("code",[e._v("T4")]),e._v(" 模板来生成，在 "),v("code",[e._v("Blog.Core.FrameWork")]),e._v(" 层，使用方法: "),v("a",{attrs:{href:"https://www.cnblogs.com/laozhang-is-phi/p/9757999.html#autoid-4-3-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("9757999.html"),v("OutboundLink")],1),e._v(" ；")]),e._v(" "),v("blockquote",[v("p",[e._v("注意：这种方案，目前默认的只能是 "),v("code",[e._v("SqlServer")]),e._v(" ，其他类型的数据库，可以看上边文章中的代码，或者群文件里对应的代码。")])]),e._v(" "),v("blockquote",[v("p",[e._v("1、修改"),v("code",[e._v("DbHelper.ttinclude")]),e._v("文件中的连接字符串，注意是"),v("code",[e._v("SqlServer")]),e._v("的： public static readonly string ConnectionString;"),v("br"),e._v("\n2、然后去各个层模板文件，点击"),v("code",[e._v("Ctrl+S")]),e._v(";"),v("br"),e._v("\n3、就会在对应的层内，看到新文件，比如：Blog.Core.Model/Model_NEW")])]),e._v(" "),v("p",[e._v("2、也可以通过 "),v("code",[e._v("Sqlsugar")]),e._v(" 所带的方法来实现 "),v("code",[e._v("DbFirst")]),e._v("，具体查看 "),v("code",[e._v("Controller")]),e._v(" 层下的 "),v("code",[e._v("DbFirstController.cs")]),e._v("；")]),e._v(" "),v("p",[e._v("3、总体操作过程，可以参考我的视频："),v("a",{attrs:{href:"https://www.bilibili.com/video/av77612407?p=2",target:"_blank",rel:"noopener noreferrer"}},[e._v("av77612407"),v("OutboundLink")],1),e._v(" ；")]),e._v(" "),v("h2",{attrs:{id:"发布与部署"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发布与部署"}},[e._v("#")]),e._v(" 发布与部署")]),e._v(" "),v("p",[e._v("1、双击项目根目录下的 "),v("code",[e._v("Blog.Core.Publish.bat")]),e._v("批处理文件；"),v("br"),e._v("\n2、执行完成后，根目录会有一个"),v("code",[e._v(".PublishFiles")]),e._v(" 文件夹，就是发布后的项目；")]),e._v(" "),v("h2",{attrs:{id:"如何更新项目模板"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何更新项目模板"}},[e._v("#")]),e._v(" 如何更新项目模板")]),e._v(" "),v("p",[e._v("1、着急的话自己打包，不着急就提 "),v("code",[e._v("issue")]),e._v("，等我更新；"),v("br"),e._v("\n2、我的开源项目中，有个模板项目 "),v("code",[e._v("BlogCoreTempl")]),e._v(" "),v("a",{attrs:{href:"https://github.com/anjoy8/BlogCoreTempl",target:"_blank",rel:"noopener noreferrer"}},[e._v("地址"),v("OutboundLink")],1),e._v("，下载下来；"),v("br"),e._v("\n3、下载最新的 "),v("code",[e._v("Blog.Core")]),e._v(" 源代码；"),v("br"),e._v("\n4、将源代码拷贝到模板项目的 "),v("code",[e._v("content")]),e._v(" 文件夹下；"),v("br"),e._v("\n5、双击 "),v("code",[e._v("Package.bat")]),e._v(" 文件，就生成了最新的模板了；")])])}),[],!1,null,null,null);v.default=t.exports}}]);